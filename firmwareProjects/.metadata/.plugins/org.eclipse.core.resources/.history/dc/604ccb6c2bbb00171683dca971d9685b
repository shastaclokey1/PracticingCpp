#include <msp430.h> 

/*
 * Simple introduction project that blinks both the LEDs on the dev kit.
 *
 * This project utilizes GPIO pins on the MSP430 to control two LEDs on the dev kit. We also utilize
 * a built in delay function which allows us to delay the processor to control the blinking pattern.
 *
 * You will need to read up about GPIO (General Purpose Input Output) pins, and their various uses.
 * I assume you understand the basics of LEDs (Light Emitting Diodes) however if you want to
 * learn more read up on those as well!
 */
unsigned long i = 0;
unsigned long j = 0;

int main(void)
{
    WDTCTL = WDTPW | WDTHOLD;	// Stop watchdog timer

    // Set the GPIO registers for the pin to output mode.
	P1DIR |= BIT0;
	P4DIR |= BIT7;

	// Drive the output of each pin low, by clearing the pin out register bits.
	P1OUT &= ~BIT0;
	P4OUT &= ~BIT3;

	// Turn on one of the LEDs so we alternate them.
	P4OUT |= BIT3;

	while (1)
	{
	    /*__delay_cycles(2000000);  // delay for 2,000,000 clock cycles. The duration in time is dependent on the clock frequency.
	    // Toggle the output register bits to change the state of the LED
	    P1OUT ^= BIT0;
	    __delay_cycles(2000000);
	    P4OUT ^= BIT7;

	    __delay_cycles(2000000);

        // Toggle the output register bits to change the state of the LED
        P1OUT ^= BIT0;
        __delay_cycles(2000000);
        P4OUT ^= BIT7;
        */
        for (i = 200000; i > 0; i /= 2 )
        {
            //__delay_cycles(i);
            for (j = i; j > 0; j--)
            // Toggle the output register bits to change the state of the LED
            P1OUT ^= BIT0;
            //__delay_cycles(i);
            for (j = i; j > 0; j--)
            P4OUT ^= BIT3;

            //__delay_cycles(i);
            for (j = i; j > 0; j--)
            // Toggle the output register bits to change the state of the LED
            P1OUT ^= BIT0;
            //__delay_cycles(i);
            for (j = i; j > 0; j--)
            P4OUT ^= BIT3;
        }
	}
}
